{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thinkpad E15\\\\Desktop\\\\Demo\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagnition from \"./common/pagnition\";\nimport { paginate } from \"../utils/paginate\";\nimport Like from \"./common/like\";\nimport ListGroup from \"./common/listgroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport moviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movie extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genre: [],\n      currentGenre: {}\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleClick = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie); // movies[index] = { ...movie };\n\n      movies[index].isClick = !movies[index].isClick;\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreChange = genre => {\n      this.setState({\n        currentGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genre = [{\n      name: \"All Genre\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genre: genre\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      movies,\n      genre,\n      currentGenre\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is not any movie in database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }, this);\n    const filtered = currentGenre && currentGenre._id ? movies.filter(m => m.genre._id === currentGenre._id) : movies;\n    const movie = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          genreCount: genre.length,\n          genre: genre,\n          currentGenre: currentGenre,\n          onGenreChange: this.handleGenreChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of movies: \", filtered.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"moviesTable\", {\n          movie: movie,\n          onHandleClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), filtered.length > pageSize ? /*#__PURE__*/_jsxDEV(Pagnition, {\n          itemCount: filtered.length,\n          pageSize: pageSize,\n          onPageChange: this.handlePageChange,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/Thinkpad E15/Desktop/Demo/vidly/src/components/movies.jsx"],"names":["React","Component","useState","getMovies","Pagnition","paginate","Like","ListGroup","getGenres","moviesTable","Movie","state","movies","pageSize","currentPage","genre","currentGenre","handleDelete","movie","filter","m","_id","setState","handleClick","index","indexOf","isClick","handlePageChange","page","handleGenreChange","componentDidMount","name","render","length","count","filtered"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagnition from \"./common/pagnition\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Like from \"./common/like\";\r\nimport ListGroup from \"./common/listgroup\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport moviesTable from \"./moviesTable\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movies: [],\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    genre: [],\r\n    currentGenre: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const genre = [{ name: \"All Genre\" }, ...getGenres()];\r\n    this.setState({ movies: getMovies(), genre: genre });\r\n  }\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies: movies });\r\n  };\r\n  handleClick = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    // movies[index] = { ...movie };\r\n    movies[index].isClick = !movies[index].isClick;\r\n    this.setState({ movies: movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreChange = (genre) => {\r\n    this.setState({ currentGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, movies, genre, currentGenre } = this.state;\r\n\r\n    if (count === 0) return <p>There is not any movie in database</p>;\r\n\r\n    const filtered =\r\n      currentGenre && currentGenre._id\r\n        ? movies.filter((m) => m.genre._id === currentGenre._id)\r\n        : movies;\r\n\r\n    const movie = paginate(filtered, currentPage, pageSize);\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            genreCount={genre.length}\r\n            genre={genre}\r\n            currentGenre={currentGenre}\r\n            onGenreChange={this.handleGenreChange}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <p>Number of movies: {filtered.length}</p>\r\n          <moviesTable movie={movie} onHandleClick={this.handleClick} />\r\n\r\n          {filtered.length > pageSize ? (\r\n            <Pagnition\r\n              itemCount={filtered.length}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={currentPage}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}